* *********************************************************
* *
* * 2005.08.09            MYDATABASE.DBC            09:03:33
* *
* *********************************************************
* *
* * Description:
* * This program was automatically generated by GENDBC
* * Version 2.26.67
* *
* *********************************************************


DisplayStatus([Creating database...])
CLOSE DATA ALL
CREATE DATABASE 'MYDATABASE.DBC'
DisplayStatus([Creating table CUSTOMER...])
MakeTable_CUSTOMER()
DisplayStatus([Creating table SALESMAN...])
MakeTable_SALESMAN()
DisplayStatus([Creating table PRODUCT...])
MakeTable_PRODUCT()
DisplayStatus([Creating table INV_HEAD...])
MakeTable_INV_HEAD()
DisplayStatus([Creating table INV_DTL...])
MakeTable_INV_DTL()
DisplayStatus([Creating table USERPWD...])
MakeTable_USERPWD()
DisplayStatus([Creating table RUNNO...])
MakeTable_RUNNO()
DisplayStatus([Creating persistent relations...])
MakeRelation_1()
MakeRelation_2()
MakeRelation_3()
MakeRelation_4()
DisplayStatus([Creating relational integrity rules...])
MakeRI()
DisplayStatus([Finished.])


********* Procedure Re-Creation *********
IF !FILE([MYDATABASE.krt])
    ? [Warning! No Procedure File Found!]
ELSE
	CLOSE DATABASE
	USE 'MYDATABASE.DBC'
	g_SetSafety = SET('SAFETY')
	SET SAFETY OFF
	LOCATE FOR Objectname = 'StoredProceduresSource'
	IF FOUND()
        APPEND MEMO Code FROM [MYDATABASE.krt] OVERWRITE
	    REPLACE Code WITH SUBSTR(Code, 70, 24467)
	ENDIF
	LOCATE FOR Objectname = 'StoredProceduresObject'
	IF FOUND()
        APPEND MEMO Code FROM [MYDATABASE.krt] OVERWRITE
        REPLACE Code WITH SUBSTR(Code, 24537)
	ENDIF
    SET SAFETY &g_SetSafety
	USE
	OPEN DATABASE [MYDATABASE.DBC]
ENDIF

FUNCTION MakeTable_CUSTOMER
***** Table setup for CUSTOMER *****
CREATE TABLE 'CUSTOMER.DBF' NAME 'CUSTOMER' (CUST_ID C(5) NOT NULL, ;
                       COMPANY C(60) NOT NULL, ;
                       CONTACT C(60) NOT NULL, ;
                       ADDRESS1 C(60) NOT NULL, ;
                       ADDRESS2 C(60) NOT NULL, ;
                       TELPHONE C(10) NOT NULL, ;
                       CREDITLMT N(12, 2) NOT NULL, ;
                       TERM_DAY N(3, 0) NOT NULL, ;
                       SALES_ID C(5) NOT NULL, ;
                       NOTE M NOT NULL)

***** Create each index for CUSTOMER *****
ALTER TABLE 'CUSTOMER' ADD PRIMARY KEY CUST_ID FOR .NOT.DELETED() TAG CUST_ID COLLATE 'MACHINE'
INDEX ON COMPANY TAG COMPANY COLLATE 'MACHINE'
INDEX ON SALES_ID TAG SALES_ID COLLATE 'MACHINE'
INDEX ON CUST_ID TAG CUST_ID1 COLLATE 'THAI'

***** Change properties for CUSTOMER *****
DBSETPROP('CUSTOMER.CUST_ID', 'Field', 'Caption', "รหัสลูกค้า")
DBSETPROP('CUSTOMER.CUST_ID', 'Field', 'InputMask', "XXXXX")
DBSETPROP('CUSTOMER.COMPANY', 'Field', 'Caption', "ชื่อบริษัท")
DBSETPROP('CUSTOMER.CONTACT', 'Field', 'Caption', "ผู้ติดต่อ")
DBSETPROP('CUSTOMER.ADDRESS1', 'Field', 'Caption', "ที่อยู่ 1")
DBSETPROP('CUSTOMER.ADDRESS2', 'Field', 'Caption', "ที่อยู่ 2")
DBSETPROP('CUSTOMER.TELPHONE', 'Field', 'Caption', "โทรศัพท์")
DBSETPROP('CUSTOMER.TELPHONE', 'Field', 'InputMask', "(XXX)XXX-XXXX")
DBSETPROP('CUSTOMER.TELPHONE', 'Field', 'Format', "R")
DBSETPROP('CUSTOMER.CREDITLMT', 'Field', 'Caption', "วงเงินสินเชื่อ")
DBSETPROP('CUSTOMER.CREDITLMT', 'Field', 'InputMask', "999,999,999.99")
DBSETPROP('CUSTOMER.TERM_DAY', 'Field', 'Caption', "วันให้สินเชื่อ")
DBSETPROP('CUSTOMER.TERM_DAY', 'Field', 'InputMask', "999")
DBSETPROP('CUSTOMER.SALES_ID', 'Field', 'Caption', "รหัสพนักงานขาย")
DBSETPROP('CUSTOMER.SALES_ID', 'Field', 'InputMask', "XXXXX")
DBSETPROP('CUSTOMER.NOTE', 'Field', 'Caption', "หมายเหตุ")
CREATE TRIGGER ON 'CUSTOMER' FOR DELETE AS __ri_delete_customer()
CREATE TRIGGER ON 'CUSTOMER' FOR UPDATE AS __ri_update_customer()
ENDFUNC

FUNCTION MakeTable_SALESMAN
***** Table setup for SALESMAN *****
CREATE TABLE 'SALESMAN.DBF' NAME 'SALESMAN' (SALES_ID C(5) NOT NULL, ;
                       NAME C(60) NOT NULL, ;
                       ADDRESS1 C(60) NOT NULL, ;
                       ADDRESS2 C(60) NOT NULL, ;
                       TELPHONE C(10) NOT NULL, ;
                       COMMRATE N(6, 2) NOT NULL, ;
                       NOTE M NOT NULL)

***** Create each index for SALESMAN *****
ALTER TABLE 'SALESMAN' ADD PRIMARY KEY SALES_ID FOR .NOT.DELETED() TAG SALES_ID COLLATE 'MACHINE'
INDEX ON NAME TAG NAME COLLATE 'MACHINE'
INDEX ON SALES_ID TAG SALES_ID1 COLLATE 'THAI'

***** Change properties for SALESMAN *****
DBSETPROP('SALESMAN.SALES_ID', 'Field', 'Caption', "รหัสพนักงานขาย")
DBSETPROP('SALESMAN.SALES_ID', 'Field', 'InputMask', "XXXXX")
DBSETPROP('SALESMAN.NAME', 'Field', 'Caption', "ชื่อพนักงานขาย")
DBSETPROP('SALESMAN.ADDRESS1', 'Field', 'Caption', "ที่อยู่ 1")
DBSETPROP('SALESMAN.ADDRESS2', 'Field', 'Caption', "ที่อยู่ 2")
DBSETPROP('SALESMAN.TELPHONE', 'Field', 'Caption', "โทรศัพท์")
DBSETPROP('SALESMAN.TELPHONE', 'Field', 'InputMask', "(XXX)XXX-XXXX")
DBSETPROP('SALESMAN.TELPHONE', 'Field', 'Format', "R")
DBSETPROP('SALESMAN.COMMRATE', 'Field', 'Caption', "อัตราค่าคอมมิชั่น")
DBSETPROP('SALESMAN.COMMRATE', 'Field', 'InputMask', "999.99")
DBSETPROP('SALESMAN.NOTE', 'Field', 'Caption', "หมายเหตุ")
CREATE TRIGGER ON 'SALESMAN' FOR DELETE AS __ri_delete_salesman()
CREATE TRIGGER ON 'SALESMAN' FOR UPDATE AS __ri_update_salesman()
ENDFUNC

FUNCTION MakeTable_PRODUCT
***** Table setup for PRODUCT *****
CREATE TABLE 'PRODUCT.DBF' NAME 'PRODUCT' (PROD_ID C(5) NOT NULL, ;
                      PROD_NAME C(60) NOT NULL, ;
                      UM C(10) NOT NULL, ;
                      UNITPRICE N(12, 2) NOT NULL)

***** Create each index for PRODUCT *****
ALTER TABLE 'PRODUCT' ADD PRIMARY KEY PROD_ID FOR .NOT.DELETED() TAG PROD_ID COLLATE 'MACHINE'
INDEX ON PROD_NAME TAG PROD_NAME COLLATE 'MACHINE'
INDEX ON PROD_ID TAG PROD_ID1 COLLATE 'THAI'

***** Change properties for PRODUCT *****
DBSETPROP('PRODUCT.PROD_ID', 'Field', 'Caption', "รหัสสินค้า")
DBSETPROP('PRODUCT.PROD_ID', 'Field', 'InputMask', "XXXXX")
DBSETPROP('PRODUCT.PROD_NAME', 'Field', 'Caption', "ชื่อสินค้า")
DBSETPROP('PRODUCT.UM', 'Field', 'Caption', "หน่วยนับ")
DBSETPROP('PRODUCT.UNITPRICE', 'Field', 'Caption', "ราคาต่อหน่วย")
DBSETPROP('PRODUCT.UNITPRICE', 'Field', 'InputMask', "999,999,999.99")
CREATE TRIGGER ON 'PRODUCT' FOR DELETE AS __ri_delete_product()
CREATE TRIGGER ON 'PRODUCT' FOR UPDATE AS __ri_update_product()
ENDFUNC

FUNCTION MakeTable_INV_HEAD
***** Table setup for INV_HEAD *****
CREATE TABLE 'INV_HEAD.DBF' NAME 'INV_HEAD' (INV_NO N(5, 0) NOT NULL, ;
                       INV_DATE D NOT NULL, ;
                       TERM_DAY N(3, 0) NOT NULL, ;
                       CUST_ID C(5) NOT NULL)

***** Create each index for INV_HEAD *****
ALTER TABLE 'INV_HEAD' ADD PRIMARY KEY INV_NO FOR .NOT.DELETED() TAG INV_NO COLLATE 'MACHINE'
INDEX ON CUST_ID TAG CUST_ID COLLATE 'MACHINE'
INDEX ON INV_NO TAG INV_NO1 COLLATE 'THAI'

***** Change properties for INV_HEAD *****
DBSETPROP('INV_HEAD.INV_NO', 'Field', 'Caption', "เลขที่ใบส่งสินค้า")
DBSETPROP('INV_HEAD.INV_DATE', 'Field', 'Caption', "วันที่ส่งสินค้า")
DBSETPROP('INV_HEAD.INV_DATE', 'Field', 'Format', "E")
DBSETPROP('INV_HEAD.TERM_DAY', 'Field', 'Caption', "จำนวนวันสินเชื่อ")
DBSETPROP('INV_HEAD.TERM_DAY', 'Field', 'InputMask', "999")
DBSETPROP('INV_HEAD.CUST_ID', 'Field', 'Caption', "รหัสลูกค้า")
DBSETPROP('INV_HEAD.CUST_ID', 'Field', 'InputMask', "XXXXX")
CREATE TRIGGER ON 'INV_HEAD' FOR DELETE AS __ri_delete_inv_head()
CREATE TRIGGER ON 'INV_HEAD' FOR UPDATE AS __ri_update_inv_head()
ENDFUNC

FUNCTION MakeTable_INV_DTL
***** Table setup for INV_DTL *****
CREATE TABLE 'INV_DTL.DBF' NAME 'INV_DTL' (INV_NO N(5, 0) NOT NULL, ;
                      PROD_ID C(5) NOT NULL, ;
                      QUANTITY N(9, 0) NOT NULL, ;
                      UNITPRICE N(12, 2) NOT NULL)

***** Create each index for INV_DTL *****
INDEX ON PROD_ID TAG PROD_ID COLLATE 'MACHINE'
INDEX ON INV_NO TAG INV_NO FOR .NOT.DELETED() COLLATE 'MACHINE'
INDEX ON INV_NO TAG INV_NO1 COLLATE 'THAI'

***** Change properties for INV_DTL *****
DBSETPROP('INV_DTL.INV_NO', 'Field', 'Caption', "เลขที่ใบส่งสินค้า")
DBSETPROP('INV_DTL.PROD_ID', 'Field', 'Caption', "รหัสสินค้า")
DBSETPROP('INV_DTL.PROD_ID', 'Field', 'InputMask', "XXXXX")
DBSETPROP('INV_DTL.QUANTITY', 'Field', 'Caption', "จำนวน")
DBSETPROP('INV_DTL.QUANTITY', 'Field', 'InputMask', "999,999,999")
DBSETPROP('INV_DTL.UNITPRICE', 'Field', 'Caption', "ราคาต่อหน่วย")
DBSETPROP('INV_DTL.UNITPRICE', 'Field', 'InputMask', "999,999,999.99")
ENDFUNC

FUNCTION MakeTable_USERPWD
***** Table setup for USERPWD *****
CREATE TABLE 'USERPWD.DBF' NAME 'USERPWD' (USERNAME C(10) NOT NULL, ;
                      PASSWORD C(10) NOT NULL)

***** Create each index for USERPWD *****
ALTER TABLE 'USERPWD' ADD PRIMARY KEY USERNAME TAG USERNAME COLLATE 'MACHINE'

***** Change properties for USERPWD *****
ENDFUNC

FUNCTION MakeTable_RUNNO
***** Table setup for RUNNO *****
CREATE TABLE 'RUNNO.DBF' NAME 'RUNNO' (RUN_NO N(10, 0) NOT NULL)

***** Create each index for RUNNO *****

***** Change properties for RUNNO *****
ENDFUNC

*************** Begin Relations Setup **************

FUNCTION MakeRelation_1
ALTER TABLE 'CUSTOMER' ADD FOREIGN KEY TAG SALES_ID REFERENCES SALESMAN TAG SALES_ID
ENDFUNC


FUNCTION MakeRelation_2
ALTER TABLE 'INV_HEAD' ADD FOREIGN KEY TAG CUST_ID REFERENCES CUSTOMER TAG CUST_ID
ENDFUNC


FUNCTION MakeRelation_3
ALTER TABLE 'INV_DTL' ADD FOREIGN KEY TAG PROD_ID REFERENCES PRODUCT TAG PROD_ID
ENDFUNC


FUNCTION MakeRelation_4
ALTER TABLE 'INV_DTL' ADD FOREIGN KEY TAG INV_NO REFERENCES INV_HEAD TAG INV_NO
ENDFUNC

FUNCTION MakeRI
***** Referential Integrity Setup *****
CLOSE DATABASE
USE 'MYDATABASE.DBC'
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'customer'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'sales_id'$Property AND 'salesman'$Property AND 'sales_id'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CRI   '
    ELSE
       ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'inv_head'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'cust_id'$Property AND 'customer'$Property AND 'cust_id'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CRI   '
    ELSE
       ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'inv_dtl'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'prod_id'$Property AND 'product'$Property AND 'prod_id'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CRI   '
    ELSE
       ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'inv_dtl'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'inv_no'$Property AND 'inv_head'$Property AND 'inv_no'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
       ? "Could not set RI Information."
    ENDIF
ENDIF
USE
ENDFUNC


FUNCTION DisplayStatus(lcMessage)
WAIT WINDOW NOWAIT lcMessage
ENDFUNC
